"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getTaxesFromBasket = exports.getShippingMethodsForShipment = exports.getPriceBooksForBasket = exports.getPaymentMethodsForBasket = exports.getBasket = void 0;
var _utils = require("../utils");
var _paramKeys = _interopRequireDefault(require("../ShopperBaskets/paramKeys"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
/*
 * Copyright (c) 2023, Salesforce, Inc.
 * All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */

// We must use a client with no parameters in order to have required/optional match the API spec

// This is defined here, rather than `types.ts`, because it relies on `Client` and `QueryKeys`,
// and making those generic would add too much complexity.

const getBasket = exports.getBasket = {
  path: params => ['/commerce-sdk-react', '/organizations/', params.organizationId, '/baskets/', params.basketId],
  queryKey: params => {
    const paramKeys = [..._paramKeys.default['getBasket'], ...(0, _utils.getCustomKeys)(params)];
    return [...getBasket.path(params), (0, _utils.pick)(params, paramKeys)];
  }
};
const getPaymentMethodsForBasket = exports.getPaymentMethodsForBasket = {
  path: params => ['/commerce-sdk-react', '/organizations/', params.organizationId, '/baskets/', params.basketId, '/payment-methods'],
  queryKey: params => {
    const paramKeys = [..._paramKeys.default['getPaymentMethodsForBasket'], ...(0, _utils.getCustomKeys)(params)];
    return [...getPaymentMethodsForBasket.path(params), (0, _utils.pick)(params, paramKeys)];
  }
};
const getPriceBooksForBasket = exports.getPriceBooksForBasket = {
  path: params => ['/commerce-sdk-react', '/organizations/', params.organizationId, '/baskets/', params.basketId, '/price-books'],
  queryKey: params => {
    const paramKeys = [..._paramKeys.default['getPriceBooksForBasket'], ...(0, _utils.getCustomKeys)(params)];
    return [...getPriceBooksForBasket.path(params), (0, _utils.pick)(params, paramKeys)];
  }
};
const getShippingMethodsForShipment = exports.getShippingMethodsForShipment = {
  path: params => ['/commerce-sdk-react', '/organizations/', params.organizationId, '/baskets/', params.basketId, '/shipments/', params.shipmentId, '/shipping-methods'],
  queryKey: params => {
    const paramKeys = [..._paramKeys.default['getShippingMethodsForShipment'], ...(0, _utils.getCustomKeys)(params)];
    return [...getShippingMethodsForShipment.path(params), (0, _utils.pick)(params, paramKeys)];
  }
};
const getTaxesFromBasket = exports.getTaxesFromBasket = {
  path: params => ['/commerce-sdk-react', '/organizations/', params.organizationId, '/baskets/', params.basketId, '/taxes'],
  queryKey: params => {
    const paramKeys = [..._paramKeys.default['getTaxesFromBasket'], ...(0, _utils.getCustomKeys)(params)];
    return [...getTaxesFromBasket.path(params), (0, _utils.pick)(params, paramKeys)];
  }
};
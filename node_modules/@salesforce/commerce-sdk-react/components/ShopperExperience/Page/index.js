"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.usePageContext = exports.default = exports.PageContext = exports.Page = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactHelmet = require("react-helmet");
var _Region = require("../Region");
const _excluded = ["page", "components", "className"];
/*
 * Copyright (c) 2023, Salesforce, Inc.
 * All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
// This context will hold the component map as well as any other future context.
const PageContext = exports.PageContext = /*#__PURE__*/_react.default.createContext(undefined);

// This hook allows sub-components to use the page context. In our case we use it
// so that the generic <Component /> can use the component map to know which react component
// to render.
const usePageContext = () => {
  const value = (0, _react.useContext)(PageContext);
  if (!value) {
    throw new Error('"usePageContext" cannot be used outside of a page component.');
  }
  return value;
};

/**
 * This component will render a page designer page given its serialized data object.
 *
 * @param {PageProps} props
 * @param {Page} props.region - The page designer page data representation.
 * @param {ComponentMap} props.components - A mapping of typeId's to react components representing the type.
 * @returns {React.ReactElement} - Page component.
 */
exports.usePageContext = usePageContext;
const Page = props => {
  const {
      page,
      components,
      className = ''
    } = props,
    rest = _objectWithoutProperties(props, _excluded);
  const [contextValue, setContextValue] = (0, _react.useState)({
    components
  });
  const {
    id,
    regions,
    pageDescription,
    pageKeywords,
    pageTitle
  } = page || {};

  // NOTE: This probably is not required as the list of components is known at compile time,
  // but we might need this ability in the future if we are to lazy load components.
  (0, _react.useEffect)(() => {
    setContextValue(_objectSpread(_objectSpread({}, contextValue), {}, {
      components
    }));
  }, [components]);
  return /*#__PURE__*/_react.default.createElement(PageContext.Provider, {
    value: contextValue
  }, /*#__PURE__*/_react.default.createElement(_reactHelmet.Helmet, null, pageTitle && /*#__PURE__*/_react.default.createElement("title", null, pageTitle), pageDescription && /*#__PURE__*/_react.default.createElement("meta", {
    name: "description",
    content: pageDescription
  }), pageKeywords && /*#__PURE__*/_react.default.createElement("meta", {
    name: "keywords",
    content: pageKeywords
  })), /*#__PURE__*/_react.default.createElement("div", _extends({
    id: id,
    className: `page ${className}`
  }, rest), /*#__PURE__*/_react.default.createElement("div", {
    className: "container"
  }, regions === null || regions === void 0 ? void 0 : regions.map(region => /*#__PURE__*/_react.default.createElement(_Region.Region, {
    key: region.id,
    region: region
  })))));
};
exports.Page = Page;
Page.displayName = 'Page';
var _default = exports.default = Page;
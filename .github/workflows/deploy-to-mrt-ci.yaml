name: 'Build and deploy to MRT PWA CI'

on:
  pull_request:
    types: [closed]
    branches:
      - develop

jobs:
  deploy:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    env:
      PROJECT_SLUG: 'vbq'
      TARGET_SLUG: 'pwa-ci'

    steps:
      - name: Checkout the branch
        uses: actions/checkout@v3

      - name: Setup NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: npm

      - name: Install application's dependencies
        run: npm install
        
      - name: Save credentials
        run: npx @salesforce/pwa-kit-dev@latest save-credentials --user ${{secrets.MRT_API_USER}} --key ${{secrets.MRT_API_TOKEN}}

      - name: Push and deploy the bundle to MRT
        run: npm run push -- --wait -m "${{github.event.pull_request.title}}" -s "${{ env.PROJECT_SLUG }}" -t "${{ env.TARGET_SLUG }}"
  notify:
    needs: deploy
    runs-on: ubuntu-latest
    env:
      SLACK_CHANNEL: 'vilebrequin-composable-ext'
      TARGET_URL: 'https://vbq-pwa-ci.mobify-storefront.com'

    steps:
      - name: Notify Slack channel
        run: |
          curl \
            -X POST \
            https://slack.com/api/chat.postMessage \
            -H "Content-Type: application/json; charset=utf-8" \
            -H "Authorization: Bearer ${{ secrets.SLACK_BEARER_TOKEN}}" \
            --data '{ "channel": "${{ env.SLACK_CHANNEL }}", "unfurl_links": false, "unfurl_media": false, "blocks": [{ "type": "context", "elements": [{ "type": "mrkdwn", "text": "PR `${{github.event.pull_request.head.ref}}` was merged into `${{github.event.pull_request.base.ref}}` by ${{github.event.pull_request.merged_by.login}}" }, { "type": "image", "image_url": "${{github.event.pull_request.merged_by.avatar_url}}", "alt_text": "images" }]}, { "type": "context", "elements": [{ "type": "mrkdwn", "text": "*Title: ${{github.event.pull_request.title}}*" }]}, { "type": "context", "elements": [{ "type": "mrkdwn", "text": ":white_check_mark: Deployed to <${{ env.TARGET_URL }}|${{ env.TARGET_SLUG }}>" }]}, { "type": "actions", "elements": [{ "type": "button", "text": { "type": "plain_text", "text": "View in GitHub" }, "style": "primary", "url": "${{github.event.pull_request.html_url}}" }]}]}'